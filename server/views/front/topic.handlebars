<div id="topic" class="flex flex-col gap-4 p-4 max-w-screen-lg mx-auto">
	<div class="flex flex-row justify-between">
		<h1 class="text-3xl font-bold"></h1>
		<button id="delete-topic" class="flex flex-row gap-2 rounded p-1 bg-red-500 dark:bg-red-800 justify-center items-center w-40 hover:font-bold hidden" onclick="deleteTopic()">
			<img class="dark:invert" src="/icons/trash.svg" width="20">
			<span>Elimina post</span>
		</button>
	</div>
	<ah-boardtopic></ah-boardtopic>
	<div class="flex flex-col w-full gap-4 pl-8" id="comments"></div>
</div>
<form id="newComment" class="flex flex-col p-4 max-w-prose mx-auto gap-4 hidden">
	<label for="commentText">Testo</label>
	<textarea id="commentText" class="dark:bg-neutral-800 rounded" rows="5" required></textarea>
	<input type="submit" class="p-2 bg-emerald-500 dark:bg-emerald-800 rounded hover:font-bold" value="Pubblica commento">
</form>
<script>
	if (localStorage.token) {
		document.getElementById('newComment').onsubmit = addComment;
		document.getElementById('newComment').classList.remove('hidden');
	}
	fetch('/api/topics/' + window.location.pathname.match(/[^\/]+(?=\/?$)/)[0])
		.then((response) => response.json())
		.then((topic) => {
			document.querySelector('h1').innerHTML = topic.title;
			if (localStorage.token) {
				if (localStorage.userId == topic.authorId || localStorage.isAdmin) {
					document.getElementById('delete-topic').classList.remove('hidden');
				}
			}
			let boardTopic = document.querySelector('ah-boardtopic');
			fetch('/api/users/info/' + topic.authorId)
				.then(response => response.json())
				.then(data => {
					boardTopic.setAttribute('name', data.name);
					boardTopic.setAttribute('surname', data.surname);
					if (data.profileImage) {
						boardTopic.setAttribute('profileimage', data.profileImage);
					}
				});
			boardTopic.setAttribute('text', topic.text);
			if (topic.imageUrl) {
				boardTopic.setAttribute('imageUrl', topic.imageUrl);
			}
			topic.comments.forEach(comment => {
				let commentDiv = document.createElement('div');
				commentDiv.classList = 'flex flex-col gap-2';
				let boardMessage = document.createElement('ah-boardmessage');
				commentDiv.appendChild(boardMessage);
				fetch('/api/users/info/' + comment.authorId)
					.then(response => response.json())
					.then(commentAuthor => {
						boardMessage.setAttribute('name', commentAuthor.name);
						boardMessage.setAttribute('surname', commentAuthor.surname);
						if (commentAuthor.profileImage) {
							boardMessage.setAttribute('profileimage', commentAuthor.profileImage);
						}
						if (localStorage.token) {
							if (localStorage.userId == comment.authorId  ) {
								let deleteButton = document.createElement('button');
								deleteButton.classList = 'rounded p-1 bg-red-500 dark:bg-red-800 w-40 hover:font-bold';
								deleteButton.innerHTML = 'Elimina commento';
								deleteButton.onclick = () => { deleteComment(comment._id) };
								commentDiv.appendChild(deleteButton);
							}
						}
					});
				boardMessage.setAttribute('text', comment.text);
				document.getElementById('comments').appendChild(commentDiv);
			});
		})
		.catch((error) => {
			console.error('Error:', error);
		});
	function deleteTopic() {
		fetch('/api/topics/' + window.location.pathname.match(/[^\/]+(?=\/?$)/)[0], {
			method: 'DELETE',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			}
		})
			.then(response => response.json())
			.then(data => {
				if(localStorage.isAdmin)
					window.location.href = '/back/boards/' 
				else
					window.location.href = '/front/board/' + data.animalSlug;

			})
			.catch((error) => {
				console.error('Error:', error);
			});
	}
	function addComment(event) {
		event.preventDefault();
		fetch('/api/topics/' + window.location.pathname.match(/[^\/]+(?=\/?$)/)[0] + '/comments', {
			method: 'POST',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			},
			body: JSON.stringify({
				text: document.getElementById('commentText').value
			}),
		})
			.then((response) => {
				if (response.ok) {
					document.getElementById('commentText').value = '';
					window.location.reload();
				}
			})
			.catch((error) => {
				console.error('Error:', error);
			});
	}
	function deleteComment(commentId) {
		fetch('/api/topics/' + window.location.pathname.match(/[^\/]+(?=\/?$)/)[0] + '/comment/' + commentId, {
			method: 'DELETE',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			}
		})
			.then((response) => {
				if (response.ok) {
					window.location.reload();
				}
			})
			.catch((error) => {
				console.error('Error:', error);
			});
	}
</script>
