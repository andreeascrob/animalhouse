<h1 class="text-3xl font-bold text-center p-4"></h1>
<div class="flex flex-row justify-between max-w-screen-lg mx-auto p-4">
	<h2 class="text-3xl font-bold">I tuoi animali</h2>
	<a href="/front/addpet" class="flex flex-row gap-2 rounded p-1 bg-emerald-500 dark:bg-emerald-800 justify-center items-center w-52 hover:font-bold">
		<img class="dark:invert" src="/icons/plus.svg" width="20" alt="">
		<span>Aggiungi animale</span>
	</a>
</div>
<div id="pets" class="flex flex-row flex-nowrap w-full gap-4 p-4 max-w-screen-lg mx-auto overflow-x-scroll snap-x">
</div>
<div id="bookings" class="flex flex-col gap-2 p-4 max-w-screen-lg mx-auto">
</div>
<h2 class="text-center text-3xl p-4">Il tuo profilo</h2>
<form id="form" class="flex flex-col p-4 max-w-prose mx-auto gap-4">
	<label for="name">Nome</label>
	<input id="name" class="dark:bg-neutral-800 rounded" type="text" required>
	<label for="surname">Cognome</label>
	<input id="surname" class="dark:bg-neutral-800 rounded" type="text" required>
	<label for="email">Indirizzo e-mail</label>
	<input id="email" class="dark:bg-neutral-800 rounded" type="email" required>
	<label for="address">Indirizzo</label>
	<input id="address" class="dark:bg-neutral-800 rounded" type="text">
	<label for="city">Città</label>
	<input id="city" class="dark:bg-neutral-800 rounded" type="text">
	<label for="image">Immagine</label>
	<input type="file" id="image" name="image" accept="image/png, image/jpeg" />
	<input type="submit" class="p-2 bg-emerald-500 dark:bg-emerald-800 rounded hover:font-bold" value="Aggiorna profilo">
</form>
<a href="/front/changepassword" class="flex flex-row w-52 mx-auto gap-2 rounded p-2 bg-emerald-500 dark:bg-emerald-800 justify-center items-center hover:font-bold">
	<img class="dark:invert" width="20" src="/icons/key.svg" alt="">
	<span>Cambia password</span>
</a>
<script>
	
	if (!localStorage.token) {
		window.location.href = '/front/signin';
	} else {
		document.getElementById('form').onsubmit = update;
		fetch('/api/pets/', {
			method: 'GET',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			}
		})
			.then((response) => response.json())
			.then((pets) => {
				pets.forEach(pet => {
					let petCard = document.createElement('ah-petcard');
					petCard.setAttribute('petid', pet._id);
					petCard.setAttribute('petname', pet.name);
					petCard.setAttribute('species', pet.species);
					fetch('/api/animals/' + pet.animalId)
						.then((response) => response.json())
						.then((animal) => {
							petCard.setAttribute('animal', animal.name);
						});
					petCard.setAttribute('image', pet.imageUrl);
					document.getElementById('pets').appendChild(petCard);
				});
			});
		fetch('/api/users/profile/', {
			method: 'GET',
			headers: {
				'Accept': 'application/json',
				'Content-Type': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			}
		})
			.then(response => response.json())
			.then(data => {
				document.querySelector('h1').innerHTML = data.name + ' ' + data.surname;
				document.getElementById('name').value = data.name;
				document.getElementById('surname').value = data.surname;
				document.getElementById('email').value = data.email;
				document.getElementById('address').value = data.address || '';
				document.getElementById('city').value = data.city || '';
			});
		fetch('/api/bookings', {
			method: 'GET',
			headers: {
				'Accept': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			}
		})
			.then(response => response.json())
			.then(bookings => {
				const dateTimeFormat = Intl.DateTimeFormat('it-IT', {
					hour: 'numeric',
					minute: 'numeric',
					day: 'numeric',
					month: 'short',
					year: 'numeric',
					weekday: 'short',
				});
				for (var pet in bookings) {
					let petName = document.createElement('h3');
					petName.classList = 'text-xl font-bold';
					petName.innerHTML = pet;
					document.getElementById('bookings').appendChild(petName);
					bookings[pet].sort((a, b) => a.start > b.start).forEach((booking) => {
						let info = document.createElement('p');
						const start = new Date(booking.start);
						const end = new Date(booking.end);
						info.innerHTML = `${booking.serviceName}: ${booking.info}, ${booking.address}, ${booking.city} (${dateTimeFormat.format(start)} - ${dateTimeFormat.format(end)}) <button class="rounded p-1 bg-emerald-500 dark:bg-emerald-800 items-center w-24 hover:font-bold" onclick="cancel('${booking._id}')">Disdici</button>`;
						document.getElementById('bookings').appendChild(info);
					});
				}
			});
	}
	function update(event) {
		event.preventDefault();
		const formData = new FormData(document.getElementById('form'));
		fetch('/api/users/profile', {
			method: 'POST',
			headers: {
				'Accept': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`				
			},
			body: formData
		})
			.then((response) => {
				if (response.ok) {
					alert('Profilo aggiornato');
					window.location.reload();
				}
			})
			.catch((error) => {
				console.error('Error:', error);
			});
	}
	function cancel(serviceSlotId) {
		fetch(`/api/bookings/${serviceSlotId}`, {
			method: 'DELETE',
			headers: {
				'Accept': 'application/json',
				'Authorization': `Bearer ${localStorage.token}`
			}
		})
			.then((response) => {
				if (response.ok) {
					alert('Appuntamento annullato');
				} else {
					alert('Si è verificato un errore');
				}
				window.location.reload();
			})
			.catch((error) => {
				console.error('Error:', error);
			});
	}
</script>
